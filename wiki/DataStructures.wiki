#summary Specification of the Toolbox's internal Matlab data structures.
#labels Specification

<wiki:toc max_depth="3"/>

= Toolbox Data Structures =

Data is passed around the Toolbox in the two Matlab structs:

 * `sample_data`: Contains the sample data.
 * `cal_data`: Contains calibration and metadata.

I made the choice to separate sample data from calibration data for coupling/cohesion reasons. It may end up being a better idea to just put all the data into one struct, but I'm going with the two for now.

Both of these structs originate in the [ParserSpecification Parser] module, when the input data is first loaded.

== sample_data ==

`sample_data` is a scalar or row vector of structs which contain sample data. Each element in the `sample_data` vector corresponds to one data process level (e.g. raw, auto-QC'd etc).

The `sample_data` struct elements have the following structure:
 * `sample_data`: struct
   * `level`: Data process level (Numeric)
   * `log`: Row cell array of strings forming a log of the processing which has occurred on the data.
   * `dimensions`: single struct
     * `time`: row vector of time (Numeric, as provided by the `datenum` function)
     * `depth`: optional row vector of depth (Numeric)
     * `latitude`: optional row vector of latitude (Numeric)
     * `longitude`: optional row vector of longitude (Numeric)
     * `...`: Any other dimensions
   * `parameters`: vector of structs
     * `name`: IMOS compliant parameter name (String)
     * `comment`: Optional human readable comment (String)
     * `dimensions`: Cell array of Strings containing the names of the dimensions of this parameter.
     * `data`: Matrix of data (Numeric)
     * `flags`: Single flag, or matrix of flags (Single character - see below)

=== Notes ===

 * The parameter `dimensions` array should be in the order of slowest changing to fastest changing.
 * Automatic and manual QC procedures should add to the log array when they modify any data.

=== Flagged data ===

The `flags` field in the `parameters` structs refers to data which has been flagged (either automatically or manually) as having some kind of problem (e.g. out of range). If the `flags` field is a single character, that flag value applies to all of the data. Otherwise, if it is a matrix, a single flag value is proivided for every element in the `data` matrix.

The flag values are defined in Section 6.2 of the IMOS NetCDF User's Manual. Meanings of flag values differ depending on the Quality Control Set in use (see the `qc_set` field in the `cal_data` struct below).

== cal_data ==

The `cal_data` struct contains instrument/deployment metadata information, and instrument calibration information (if this information is available). The contents of `cal_data`  may be different depending on how much calibration information is available in the raw data file and the deployment database.

A minimal `cal_data` struct should contain the following:
 * `cal_data`
   * `creation_date`: Date that this data set was created
   * `field_trip_id`: Field Trip ID (Numeric - key into DDB !FieldTrip table)
   * `instrument_make`: e.g. 'Seabird (String)
   * `instrument_model`: e.g. 'SBE37' (String)
   * `instrument_firmware`: e.g. '2.6a' (String)
   * `instrument_serial`: e.g. '6082' (String)
   * `in_water_time`: Time that the instrument was first in the water. This time is used to determine the time of the first valid sample (Numeric)
   * `out_water_time`: Time that the instrument was first out of the water. This time is used to determine the time of the last valid sample (Numeric)
   * `qc_set`: Quality Control set in use (Numeric - see section 6.2 of the IMOS NetCDF User's Manual)
   * `parameters`: Vector of structs
     * `deployment_id`: Deployment ID (String - key into DDB !DeploymentData table)
     * `name`: IMOS compliant parameter name (String)
     * `max_value`: Minimum allowable value (Numeric)
     * `min_value`: Maximum allowable value (Numeric)

=== Notes ===

 * The `parameters` structs in both `sample_data` and `cal_data` contain the same parameters, in the same order.

== Relationship ==

There is a one to one relationship between a vector of `sample_data` structs and a `cal_data` struct; in other words, these structs always come in pairs. A `sample_data`/`cal_data` pair contains data corresponding to one physical instrument, e.g. an SBE37. One instrument may have multiple sensors; each element in the `parameters` vector corresponds to one sensor.

A `sample_data`/`cal_data` pair maps directly to one entry in the !FieldTrip table in the [DeploymentDatabase DDB]. There will likely be multiple instruments per field trip, so multiple `sample_data`/`cal_data` pairs may map to the same field trip. Each `parameter` vector maps to one entry in the !DeploymentData table, thus maps to one entry in each of the Instruments and Sensors tables.

http://imos-toolbox.googlecode.com/svn/wiki/images/data_structure_relationship.png