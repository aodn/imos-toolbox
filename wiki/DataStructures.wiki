#summary Specification of the Toolbox's internal Matlab data structures.
#labels Specification

<wiki:toc max_depth="3"/>

= Toolbox Data Structures =

Data is passed around the Toolbox in the two Matlab structs:

 * `sample_data`: Contains the sample data.
 * `cal_data`: Contains calibration and metadata.

I made the choice to separate sample data from calibration data for coupling/cohesion reasons. It may end up being a better idea to just put all the data into one struct, but I'm going with the two for now.

There is a one to one relationship between a (vector of) `sample_data` struct(s) and a `cal_data` struct; in other words, these structs always come in pairs. A `sample_data`/`cal_data` pair maps directly to one entry in the !DeploymentData table in the [DeploymentDatabase DDB], thus by extension, maps directly to one entry in the Instruments table.

Both of these structs originate in the [ParserSpecification Parser] module, when the input data is first loaded.

== sample_data ==

`sample_data` is a row vector of structs which contain sample data. Each element in the `sample_data` vector corresponds to one data process level (e.g. raw, auto-QC'd etc).

The `sample_data` struct elements have the following structure:
 * `sample_data`: struct
   * `level`: Data process level (String or Numeric?)
   * `time`: row vector of time (Numeric, as provided by the `datenum` function)
   * `depth`: Scalar or row vector of depth (Numeric)
   * `latitude`: Scalar or row vector of latitude (Numeric)
   * `longitude`: Scalar or row vector of longitude (Numeric)
   * `log`: Row cell array of strings forming a log of the processing which has occurred on the data.
   * `parameters`: vector of structs
     * `name`: IMOS compliant parameter name (String)
     * `comment`: Optional human readable comment (String)
     * `data`: row vector of data (Numeric)
     * `flags`: vector of structs (see below)
       * `low_idx`: lower bound of flagged data range (Numeric)
       * `high_idx`: upper bound of flagged data range (Numeric)
       * `flag`: flag value (String)
       * `comment`: Human readable comment

=== Notes ===

 * The length of the `time`, and all `data` vectors are the same. If the `depth`, `latitude` and `longitude` fields are vectors, they are also of the same length.
 * Automatic and manual QC procedures should add to the log array when they modify any data.

=== Flagged data ===

The `flags` vector in the `parameters` structs refers to data which has been flagged (either automatically or manually) as having some kind of problem (e.g. out of range). When a single sample is to be flagged the low index and high index will be equal.

The flag value is defined in Section 6.2 of the IMOS NetCDF User's Manual. Meanings of flag values differ depending on the Quality Control Set in use (see the `qc_set` field in the `cal_data` struct below).

== cal_data ==

The `cal_data` struct contains instrument/deployment metadata information, and instrument calibration information (if this information is available). The contents of `cal_data`  may be different depending on how much calibration information is available in the raw data file and the deployment database.

A minimal `cal_data` struct should contain the following:
 * `cal_data`
   * `deployment_id`: Deployment ID (Numeric - key into DDB !DeploymentData table)
   * `instrument_make`: e.g. 'Seabird (String)
   * `instrument_model`: e.g. 'SBE37' (String)
   * `instrument_firmware`: e.g. '2.6a' (String)
   * `instrument_serial`: e.g. '6082' (String)
   * `in_water_time`: Time that the instrument was first in the water. This time is used to determine the time of the first valid sample (Numeric)
   * `out_water_time`: Time that the instrument was first out of the water. This time is used to determine the time of the last valid sample (Numeric)
   * `qc_set`: Quality Control set in use (Numeric - see section 6.2 of the IMOS NetCDF User's Manual)
   * `parameters`: Vector of structs
     * `name`: IMOS compliant parameter name (String)
     * `max_value`: Minimum allowable value (Numeric)
     * `min_value`: Maximum allowable value (Numeric)

=== Notes ===

 * The `parameters` structs in both `sample_data` and `cal_data` contain the same parameters, in the same order.