#summary Lists the instruments that are currently supported.

<wiki:toc/>

= Supported Instruments =

This page lists the instruments which are supported by the toolbox, and the data formats required for each instrument. If you have data from an unsupported instrument, or from a supported instrument, but in an unsupported format, send me an [http://code.google.com/u/pauld.mccarthy/ email], or leave a comment on this page, and I'll look into adding support for the instrument/format.

== Seabird SBE37/SBE39 ==

The toolbox can read in data that has been downloaded from an SBE37 'Microcat' CTP sensor or an SBE39 temperature/pressure sensor

The following variants of the SBE37 exist:
 * SBE37-IM
 * SBE37-IMP
 * SBE37-SM  (RS232)
 * SBE37-SM  (RS485)
 * SBE37-SMP (RS232)
 * SBE37-SMP (RS485)
 * SBE37-SI  (RS232)
 * SBE37-SI  (RS485)
 * SBE37-SIP (RS232)
 * SBE37-SIP (RS485)

The following variants of the SBE39 exist:
 * SBE39
 * SBE39-IM

The SBE output format is configurable, and there are slight differences in output formats between variants. Additionally, instruments which run an older firmware version use different commands for configuring the output format and downloading data. The toolbox will only parse sample data which is in the following format:

{{{
  temperature[, conductivity][, pressure][, salinity], date, time
}}}
where

 * `temperaturee`: floating point, Degrees Celsius ITS-90
 * `conductivity`: floating point, S/m (only on SBE37)
 * `pressure`:     floating point, decibars, optional (present on instruments with optional pressure sensor)
 * `salinity`: floating point, PSU, optional (may be present on SBE37 instruments with firmware >= 3.0)
 * `date`: dd mmm yyyy (e.g. 01 Jan 2008)
 * `time`: hh:mm:ss    (e.g. 15:45:03)

All SBE37 variants can be configured to output this format. SBE39 variants provide data in this format only. On SBE37 instruments running firmware < 3.0, the sensor should be configured as follows:

{{{
  Format=1
}}}

For instruments running firmware >= 3.0:

{{{
OutputFormat=1
OutputDepth=N   (if sensor supports this command)
OutputSal=N     (if sensor supports this command - Y if you want salinity)
OutputSV=N
OutputDensity=N (if sensor supports this command)
OutputTime=Y    (if sensor supports this command)
}}}

The input file must also contain a header section which contains sensor metadata and calibration information (as obtained via the 'DS' and 'DC' commands) - this is the output format provided by the Windows seaterm program.

== Wetlabs WQM ==

The toolbox is able to parse data retrieved from a Wetlabs WQM CTD/ECO instrument. The data must be in '.dat' format, i.e. raw data which has been processed by the WQMHost software, in tab-delimited format. WQMHost allows a wide range of fields to be included in the output file; the following are supported by the toolbox:

 * `WQM`: literal 'WQM'
 * `SN`: serial number - required
 * `MMDDYY` (date - required
 * `HHMMSS` (time - required
 * `Conductivity` (floating point, milliSiemens/metre
 * `Temperature` (floating point, Degrees Celsius
 * `Presssure` (floating point, Decibar
 * `Salinity` (floating point, PSS
 * `Dissolved Oxygen`: (floating point, milligrams/Litre
 * `Chlorophyll`: (floating point, micrograms/Litre
 * `Turbidity`: (floating point, NTU

Any other fields which are present in the input file will be ignored.

== Aquatec Aqualogger 520 ==

The toolbox is able to parse raw data file retrieved from an Aquatec AQUAlogger 520. The
AQUAlogger 520 range of sensors provide logging capability for temperature and pressure. The following variants on the AQUAlogger 520 exist:
 * 520T:  temperature
 * 520P:  pressure
 * 520PT: pressure and temperature

The raw data file format for all loggers is identical; every line in a file, including sample data, is a key-value pair, separated by a comma. The following lines are examples:

{{{
VERSION,3.0
LOGGER TYPE,520PT Pressure & Temperature   
LOGGER,23-502,SYD100 T2 
DATA,23:00:01 24/06/2008,29412,16.310779,26345,1.025358,
DATA,23:00:02 24/06/2008,29411,16.312112,26346,1.025938,
}}}

If the logger was configured to use burst mode, the bursts are averaged.