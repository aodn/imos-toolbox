#summary Toolbox problems and workaround
#labels Support,Featured

<wiki:toc/>

= Troubleshooting =

== java.lang.OutOfMemoryError: Java heap space ==

{{{
Error using executeDDBQuery (line 106)
Java exception occurred:
net.ucanaccess.jdbc.UcanaccessSQLException: java.lang.OutOfMemoryError: Java heap space
}}}

This is because UCanAccess creates a whole image of your deployment database in memory and can happen when the database becomes significantly important. The easiest fix is to tell Java to allocate sufficient heap space memory when the Java Virtual Machine starts up and this can be done in two ways:

 * In Matlab, via Preferences, in General -> Java Heap Memory and then set it to the maximum (2Gb is a minimum for AIMS database for example).
 * Add a java.opts file in the root directory of the toolbox, that is to say next to imosToolbox.m, which includes (without the double quotes) : "-Xmx2g". This way we're telling Java to allocate 2Gb of Heap memory. Then start either Matlab or any standalone binary executable from the root directory of the toolbox. This is the preferred method for use in standalone.

== Invalid graphics handle ==

If, while viewing a data set, you enable/disable parameters too quickly, you may be presented with the following dialog:

http://imos-toolbox.googlecode.com/svn/wiki/images/gui_handle_error.png

This is a harmless, but unfortunately unavoidable problem with Matlab - it can be safely ignored.

== Standalone errors ==

=== Microsoft Visual C++ Runtime Error ===

Upon executing the standalone version of the toolbox, you may be presented with the following error dialog:

http://imos-toolbox.googlecode.com/svn/wiki/images/r6034.png

This is a Matlab problem, as described in this bug report (Mathworks login required): http://www.mathworks.com/support/bugreports/531531

You can overcome this problem by following the instructions in the bug report in the section *For standalone executables and C/C++ shared libraries Using Lcc-win32 compiler*. All you have to do is create a plain text file called `imosToolbox.exe.manifest` (make sure the `.txt` extension is not present) in the `imos-toolbox` directory, which contains the following:

{{{
<?xml version='1.0' encoding='UTF-8' standalone='yes'?> 
<assembly xmlns='urn:schemas-microsoft-com:asm.v1' manifestVersion='1.0'> 
  <dependency> 
    <dependentAssembly> 
      <assemblyIdentity type='win32' name='Microsoft.VC80.CRT' version='8.0.50727.762' processorArchitecture='x86' publicKeyToken='1fc8b3b9a1e18e3b' /> 
    </dependentAssembly> 
  </dependency> 
</assembly>
}}}

With this file, the toolbox should start without issue.
