% filename or ODBC DSN of MS-ACCESS deployment database
toolbox.ddb = 

% or full connection details to other kind of deployment database :
% class name of JDBC database driver
toolbox.ddb.driver = 

% database connection string, must include user and password if required by the database
toolbox.ddb.connection = 

% user's login and password to database
toolbox.ddb.user = 
toolbox.ddb.password = 


% directory which contains netcdf templates
% (defaults to ./NetCDF/template/)
toolbox.templateDir = 

% date and time formats used internally and for GUI display
toolbox.dateFormat = dd mmm yyyy
toolbox.timeFormat = yyyy-mm-ddTHH:MM:SS

% QC set in use - see section 6.2 of the IMOS NetCDF User's Manual
toolbox.qc_set = 1

% format in which all dates should be exported in NetCDF attributes
exportNetCDF.dateFormat = yyyy-mm-ddTHH:MM:SSZ

% different date format for NetCDF file names
exportNetCDF.fileDateFormat = yyyymmddTHHMMSSZ

% default set of auto QC routines
autoQCManager.autoQCChain = 

% propmt for preprocessing (if false, 
% preprocessing routines are not executed)
preprocessManager.preprocessPrompt = false

% default set of preprocessing routines
preprocessManager.preprocessChain = 

% file status dialog formatting styles
% can be one of 'bold', 'normal', 'italic', or an HTML colour (e.g. 'red', 
% 'blue' etc)
dataFileStatusDialog.invalidFileNameFormat = red
dataFileStatusDialog.noFileFormat          = bold
dataFileStatusDialog.multipleFileFormat    = italic

% default values for start dialog
startDialog.dataDir = C:
startDialog.fieldTrip = 
startDialog.lowDate = 
startDialog.highDate = 

% default directory for manual data import
importManager.manualDir = 

% default directory for file export
exportDialog.defaultDir = 

% prompt user to select parser if an appropriate one 
% cannot be found (if false, the data is not imported)
importManager.noParserPrompt = true

% default directory for saving graphs as images
saveGraph.noPrompt  = false
saveGraph.exportDir = 
saveGraph.imgType   = png

